// <auto-generated />
using System;
using DevTracker.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevTracker.Data.Migrations
{
    [DbContext(typeof(DevTrackerContext))]
    [Migration("20250516121250_UpdateColumnsWithMaxLength")]
    partial class UpdateColumnsWithMaxLength
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DevTracker.Data.Models.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AchieveBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<TimeSpan>("DailyTargetHours")
                        .HasColumnType("time");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("DevTracker.Data.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GoalId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("GoalId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("DevTracker.Data.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndedAtDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GoalCodingSessionId")
                        .HasColumnType("int");

                    b.Property<int?>("GoalTheorySessionId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectCodingSessionId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectTheorySessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartedAtDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GoalCodingSessionId");

                    b.HasIndex("GoalTheorySessionId");

                    b.HasIndex("ProjectCodingSessionId");

                    b.HasIndex("ProjectTheorySessionId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("DevTracker.Data.Models.Project", b =>
                {
                    b.HasOne("DevTracker.Data.Models.Goal", "Goal")
                        .WithMany("Projects")
                        .HasForeignKey("GoalId");

                    b.Navigation("Goal");
                });

            modelBuilder.Entity("DevTracker.Data.Models.Session", b =>
                {
                    b.HasOne("DevTracker.Data.Models.Goal", "GoalCodingSession")
                        .WithMany("CodingSessions")
                        .HasForeignKey("GoalCodingSessionId");

                    b.HasOne("DevTracker.Data.Models.Goal", "GoalTheorySession")
                        .WithMany("TheorySessions")
                        .HasForeignKey("GoalTheorySessionId");

                    b.HasOne("DevTracker.Data.Models.Project", "ProjectCodingSession")
                        .WithMany("CodingSessions")
                        .HasForeignKey("ProjectCodingSessionId");

                    b.HasOne("DevTracker.Data.Models.Project", "ProjectTheorySession")
                        .WithMany("TheorySessions")
                        .HasForeignKey("ProjectTheorySessionId");

                    b.Navigation("GoalCodingSession");

                    b.Navigation("GoalTheorySession");

                    b.Navigation("ProjectCodingSession");

                    b.Navigation("ProjectTheorySession");
                });

            modelBuilder.Entity("DevTracker.Data.Models.Goal", b =>
                {
                    b.Navigation("CodingSessions");

                    b.Navigation("Projects");

                    b.Navigation("TheorySessions");
                });

            modelBuilder.Entity("DevTracker.Data.Models.Project", b =>
                {
                    b.Navigation("CodingSessions");

                    b.Navigation("TheorySessions");
                });
#pragma warning restore 612, 618
        }
    }
}
